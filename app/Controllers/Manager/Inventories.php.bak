<?php
namespace App\Controllers\Manager;

use CodeIgniter\Controller;
use App\Controllers\BaseController;
use App\Libraries\Hash;
use App\Models\inc\Multi_model as Multi_model;
use App\Models\Common_model as Common_model;
use App\Libraries\Department_menu;

use CodeIgniter\HTTP\ResponseInterface;

class Inventories extends BaseController
{
    protected $Multi_model;
    protected $Common_model;
  
    public function __construct(){
    
        helper(['url','form']);
        $this->Multi_model = new Multi_model;
        $this->Common_model = new Common_model;  
 
    }	
	
	public function index()
	{	

		$msg='';
		$update='Save';
		$id_value 	= service('uri')->getSegment(2, -99);
		$data['page_title'] 	= 'Inventories';	
		$data['system_name'] 		=	$this->Common_model->get_field_val('settings',array('key'=>'system_name'),'value');
		$data['short_name'] 		=	$this->Common_model->get_field_val('settings',array('key'=>'short_name'),'value');

		if ($this->request->getPost('show')=='Show') {

			$data	=	$this->showrec($data);
			//$data['frm'] 		= $form->get(); // this returns the validated form as a string		
			echo view('admin/Add', $data);
		}elseif (($this->request->getPost('update')=='Update') || ($this->request->getPost('update')=='Save')) { 
				$this->process();
			$data	=	$this->showrec($data);
			echo view('admin/Add', $data);
		} else {
			$data	=	$this->showrec($data);			
			echo view('admin/Add', $data);
			echo view('admin/modals/md_inventories');

		}

	}
	
	public function ajax_edit($id)
	{
		$sql = "SELECT *
				FROM inventories
				where id='".$id."'";
								
		$query 	= 	$this->Common_model->run_query($sql);
		if ($query) {
			foreach ($query->getResult() as $rowz) {
				//$data['name'] 			= 	$rowz->name;	
				$data['description'] 	= 	$rowz->description;	
				$data['item_id'] 		= 	$rowz->item_id;	
				$data['location_id'] 	= 	$rowz->location_id;	
				$data['serial_number'] 	= 	$rowz->serial_number;	
				$data['supplier_id'] 	= 	$rowz->supplier_id;				
				$data['amount'] 	= 	$rowz->amount;	
				$data['buy_price'] 	= 	$rowz->buy_price;	
				$data['inventory_id'] 		= 	$id;	
				
			}
		} else {
			$data =	array(
			);
			
		}
		$itemsArray		=	array();
		$locationArray	=	array();
		$supplierArray	=	array();
		
		$sql = "SELECT id, name
				FROM items
				order by name
				";		
		$query 	= 	$this->Common_model->run_query($sql);
		if ($query) {
			foreach ($query->getResult() as $rowz) {
				$itemsArray[] = array("id" => $rowz->id, "name" => $rowz->name);
			}
		}
		$data['items'] 	=	$itemsArray;


		$sql = "SELECT id, name
				FROM suppliers
				order by name
				";		
		$query 	= 	$this->Common_model->run_query($sql);
		if ($query) {
			foreach ($query->getResult() as $rowz) {
				$supplierArray[] = array("id" => $rowz->id, "name" => $rowz->name);
			}
		}
		$data['suppliers'] 	=	$supplierArray;
		
		$sql = "SELECT id, name
				FROM item_locations
				order by name
				";		
		$query 	= 	$this->Common_model->run_query($sql);
		if ($query) {
			foreach ($query->getResult() as $rowz) {
				$locationArray[] = array("id" => $rowz->id, "name" => $rowz->name);
			}
		}
		$data['locations'] 	=	$locationArray;

		echo json_encode($data);
		//echo $data;
	}
	
	public function ajax_update()
	{
		$rdate					=	date('Y-m-d H:i:s');
		$id						=	$this->request->getPost('inventory_id');
		$item_id				=	$this->request->getPost('item_id');
		//$name 					= 	$this->Common_model->get_field_val('items',array('id'=>$item_id),'name');

		$datas = array(
				'item_id' 				=> $this->request->getPost('item_id'),
				'description' 			=> $this->request->getPost('description'),
				'location_id' 			=> $this->request->getPost('location_id'),
				'supplier_id' 			=> $this->request->getPost('supplier_id'),
				'amount' 				=> $this->request->getPost('amount'),
				'serial_number' 		=> $this->request->getPost('serial_number'),
				'buy_price' 			=> $this->request->getPost('buy_price'),
				'created_by' 			=> session()->get('USER_NAME'),
				'created_at' 			=> $rdate,
				'updated_at' 			=> $rdate
		);
		
		$fields				=	array('id');	
		$value				=	array($id);
		
		if (!$this->Common_model->isDuplicate('inventories',$fields,$value)) {			
			if ($this->Common_model->addRecord('inventories', $datas)) {
				$amount	=$this->request->getPost('amount');
				$capacity 	= 	$this->Common_model->get_field_val('items',array('id'=>$item_id),'capacity');
				$amount		=	$amount	+	$capacity;
				
				$dataItem	=	array('capacity'=>$amount);
				$whereItem	=	array('id'=>$item_id);
				if ($this->Common_model->updateRecord('items',$dataItem,$whereItem)) {
				}
				
				session()->setFlashData('msg', 'inventory added successfully');
				echo json_encode(array("status" => TRUE,"msg"=>"Inventory  added successfully"));
			} else {
				echo json_encode(array("status" => FALSE,"msg"=>"No Inventory Added"));
			}
		} else {
			$datas = array(
				'item_id' 				=> $this->request->getPost('item_id'),
				'description' 			=> $this->request->getPost('description'),
				'location_id' 			=> $this->request->getPost('location_id'),
				'supplier_id' 			=> $this->request->getPost('supplier_id'),
				//'amount' 				=> $this->request->getPost('amount'),
				'serial_number' 		=> $this->request->getPost('serial_number'),
				'buy_price' 			=> $this->request->getPost('buy_price'),
				'updated_at' 			=> $rdate
			);		
			$where 		=	array('id'=>$id);
			if ($this->Common_model->updateRecord('inventories',$datas,$where)) {
				
				$amount	=$this->request->getPost('amount');
				$capacity 	= 	$this->Common_model->get_field_val('items',array('id'=>$item_id),'capacity');
				$amount		=	$amount	+	$capacity;
				
				$dataItem	=	array('capacity'=>$amount);
				$whereItem	=	array('id'=>$item_id);
				if ($this->Common_model->updateRecord('items',$dataItem,$whereItem)) {
				}
				
				session()->setFlashData('msg', 'inventory Changed successfully');
				echo json_encode(array("status" => TRUE,"msg"=>"inventory Changed successfully"));
			} else {
				echo json_encode(array("status" => FALSE,"msg"=>"No Changes on inventory"));
			}
		}
		
	}	
	
	function showrec($data) {
		
		$_SESSION['ROUTE_NO'] ='inventories'; //the route configuration in config/routes.php for this controller		
		$data['headData'] = array('S/No','Name','Description','Supplied Quantity','Location','Cost');
		$data['mapData'] = array('itemName'=>'L','description'=>'L','amount'=>'L','locationName'=>'L','buy_price'=>'L');
		$data['addTags'] = array('created_by'=>session()->get('USER_NAME'),'created_at'=>date('Y-m-d h:m:s'));
		$action = array('col_edit'=>TRUE,'col_del'=>TRUE); //to show/hide'edit' and'delete' (action) column respectively
		$ref_tables = array(); //fields and tables to check before enable delete link.
		
		$sql		=	"SELECT inventories.*,item_locations.name as locationName,
							items.name as itemName
						FROM inventories 
							inner join item_locations on item_locations.id=location_id
							inner join items on items.id=item_id
			";
		$data['addNew'] = array('do_inventories','id','delete_inventory');		
		//$query = $this->my_pay_fee_model->get_Records($where_arr);
		$query		=   $this->Common_model->run_query($sql);		
		if ($query) {
			$data['queryData'] = $this->Multi_model->showRecords($query, $action, $ref_tables);
			$data['editURI'] = array(site_url().'/Admin/inventory/index','id');
			$data['deleteURI'] = array(site_url().'inventory/delete','id');
			$data['dyn_table'] = view('inc/dyn_table', $data);
		} else {
			$data['dyn_table'] = view('inc/dyn_table', $data);
		}
		session()->setFlashData('msg', 'Inventory Changed successfully');
		$data['title'] = "LAB";
		return $data;
	}

	public function delete($id)
	{
		$rdate					=	date('Y-m-d H:i:s');
		$fields				=	array('id');	
		$values				=	array($id);	
		
		$response=array("status" => FALSE);

		if ($this->Common_model->isDuplicate('inventories',$fields,$values)) {			
			$wheres			=	array('id'	=>	$id);							
			$aff_rows = $this->Common_model->deleteRecord('inventories','id', $id);
			if ($aff_rows) {
				$response=array("status" => TRUE,"msg"=>"inventory deleted successfully");
			} else {
				$response=array("status" => FALSE,"msg"=>"inventory could not be deleted");
			}
		} else {
				$response=array("status" => FALSE,"msg"=>"inventory locations is not found");
		}
		echo json_encode($response);
	}	
}
